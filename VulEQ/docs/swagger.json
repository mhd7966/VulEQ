{
    "swagger": "2.0",
    "info": {
        "description": "I have no specific description",
        "title": "VulEQ API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/v0",
    "paths": {
        "/project/{del_project_id}/issues": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return all issues of a project(by del_project_id)",
                "summary": "get all issues",
                "operationId": "get_all_issues_by_delProjectID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "del_project_id",
                        "name": "del_project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Issue"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        },
        "/project/{del_project_id}/scans": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return all scans info of a project(by del_project_id)",
                "summary": "get all scans",
                "operationId": "get_all_scans_by_delProjectID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "del_project_id",
                        "name": "del_project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Scan"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        },
        "/scan": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "if project doesn't exist, first create that then scan it else just clone and scan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "scan project",
                "operationId": "scan_by_del_project_id",
                "parameters": [
                    {
                        "description": "Project info",
                        "name": "projectBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProjectBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Scan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        },
        "/scan/{scan_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all information about a specific scan of project",
                "summary": "get scan information",
                "operationId": "get_info_scan_by_scan_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID that return after scan a project",
                        "name": "scan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Scan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Issue": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "author": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "component": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "debt": {
                    "type": "string"
                },
                "effort": {
                    "type": "string"
                },
                "flows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hash": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "line": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "rule": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "textRange": {
                    "$ref": "#/definitions/models.TextRangeStruct"
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updateDate": {
                    "type": "string"
                }
            }
        },
        "models.ProjectBody": {
            "type": "object",
            "required": [
                "del_project_id",
                "git_branch",
                "git_commit_hash",
                "git_token",
                "git_url",
                "pipeline_id"
            ],
            "properties": {
                "del_project_id": {
                    "type": "integer"
                },
                "git_branch": {
                    "type": "string"
                },
                "git_commit_hash": {
                    "type": "string"
                },
                "git_token": {
                    "type": "string"
                },
                "git_url": {
                    "type": "string"
                },
                "pipeline_id": {
                    "type": "integer"
                }
            }
        },
        "models.Scan": {
            "type": "object",
            "properties": {
                "gitCommitHash": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lineCode": {
                    "type": "string"
                },
                "lineComment": {
                    "type": "string"
                },
                "numBug": {
                    "type": "string"
                },
                "numCodeSmell": {
                    "type": "string"
                },
                "numDebt": {
                    "type": "string"
                },
                "numDuplicateLine": {
                    "type": "string"
                },
                "numFile": {
                    "type": "string"
                },
                "numVulnerability": {
                    "type": "string"
                },
                "pipelineID": {
                    "type": "integer"
                },
                "projectID": {
                    "type": "integer"
                }
            }
        },
        "models.TextRangeStruct": {
            "type": "object",
            "properties": {
                "endLine": {
                    "type": "integer"
                },
                "endOffset": {
                    "type": "integer"
                },
                "startLine": {
                    "type": "integer"
                },
                "startOffset": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}